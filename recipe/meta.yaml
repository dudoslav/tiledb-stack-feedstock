# Set versions here ----

# TileDB
{% set version_tiledb = "2.19.0" %}
{% set git_rev_tiledb = "2.19.0" %}

# TileDB-Py
{% set version_tiledb_py = "0.24.0" %}
{% set git_rev_tiledb_py = "0.24.0" %}

# TileDB-R
{% set version_tiledb_r = "0.22.0" %}
{% set git_rev_tiledb_r = "0.22.0" %}

# TileDB-VCF
{% set version_tiledb_vcf = "0.27.1" %}
{% set git_rev_tiledb_vcf = "0.27.1" %}

# TileDB-SOMA
{% set version_tiledb_soma = "1.6.2" %}
{% set git_rev_tiledb_soma = "1.6.2" %}

package:
  # These are just placeholders. Each separate output defines its name and
  # version
  name: tiledb-stack
  version: 0.0.0.0

source:
  - git_url: https://github.com/TileDB-Inc/TileDB.git
    git_rev:  {{ git_rev_tiledb }}
    folder: TileDB/
  - git_url: https://github.com/TileDB-Inc/TileDB-Py.git
    git_rev: {{ git_rev_tiledb_py }}
    folder: TileDB-Py/
  - git_url: https://github.com/TileDB-Inc/TileDB-R.git
    git_rev: {{ git_rev_tiledb_r }}
    folder: TileDB-R/
  - git_url: https://github.com/TileDB-Inc/TileDB-VCF.git
    git_rev: {{ git_rev_tiledb_vcf }}
    folder: TileDB-VCF/
  - git_url: https://github.com/single-cell-data/TileDB-SOMA.git
    git_rev: {{ git_rev_tiledb_soma }}
    folder: TileDB-SOMA/

outputs:
  - name: tiledb
    version: {{ version_tiledb }}
    script: build-tiledb.sh
    build:
      number: 0
      script_env:
        - SCCACHE_BUCKET
        - SCCACHE_REGION
          # - SCCACHE_ENDPOINT
          # - SCCACHE_S3_USE_SSL
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
      run_exports:
        # https://abi-laboratory.pro/?view=timeline&l=tiledb
        - {{ pin_subpackage('tiledb', max_pin='x.x') }}
    requirements:
    about:
      home: http://tiledb.io
      license: MIT
      license_family: MIT
      license_file: LICENSE
      summary: TileDB sparse and dense multi-dimensional array data management
      description: |
        TileDB is an efficient multi-dimensional array management system which introduces
        a novel on-disk format that can effectively store dense and sparse array data with
        support for fast updates and reads. It features excellent compression, and an efficient
        parallel I/O system with high scalability.
      doc_url: http://docs.tiledb.io
      dev_url: https://github.com/TileDB-Inc/TileDB
  - name: tiledb-py
    version: {{ version_tiledb_py }}
    script: build-tiledb-py.sh
    build:
      number: 0
    requirements:
      build:
        - {{ compiler('cxx') }}
        - sccache
      host:
        - {{ pin_subpackage('tiledb', exact=True) }}
      run:
        - {{ pin_subpackage('tiledb', exact=True) }}
    about:
      home: http://tiledb.io
      license: MIT
      license_family: MIT
      license_file: LICENSE
      summary: Python interface to the TileDB sparse and dense multi-dimensional array storage manager
      description: |
        TileDB-Py is the python interface to the TileDB array storage manager.
        TileDB  is an efficient multi-dimensional array management system which introduces
        a novel on-disk format that can store dense and sparse array data with
        support for fast reads and updates and reads. It features excellent compression, and an efficient
        parallel I/O system with high scalability.
      doc_url: https://api-reference.tiledb.io/python-api.html
      dev_url: https://github.com/TileDB-Inc/TileDB-Py
  - name: r-tiledb
    version: {{ version_tiledb_r }}
    script: build-tiledb-r.sh
    build:
      number: 0
      script_env:
        - SCCACHE_BUCKET
        - SCCACHE_REGION
          # - SCCACHE_ENDPOINT
          # - SCCACHE_S3_USE_SSL
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
      rpaths:
        - lib/R/lib/
        - lib/
    requirements:
      build:
        - {{ compiler('cxx') }}
        - pkg-config
        - make
        - sccache
      host:
        - {{ pin_subpackage('tiledb', exact=True) }}
      run:
        - {{ pin_subpackage('tiledb', exact=True) }}
    test:
      requires:
        - r-tinytest
        - r-nycflights13
        - r-palmerpenguins
        - r-data.table
      commands:
        - Rscript -e 'tinytest::test_package("tiledb")'
    about:
      home: https://www.tiledb.com
      license: MIT
      license_file:
        - {{ environ["PREFIX"] }}/lib/R/share/licenses/MIT
        - LICENSE
      summary: R interface to the TileDB array storage manager
      description: |
        TileDB is a highly-parallelized, cloud native array storage engine.
      doc_url: https://docs.tiledb.com/developer/
      dev_url: https://github.com/TileDB-Inc/TileDB-R
  - name: libtiledbvcf
    version: {{ version_tiledb_vcf }}
    build:
      number: 0
      script_env:
        - SCCACHE_BUCKET
        - SCCACHE_REGION
          # - SCCACHE_ENDPOINT
          # - SCCACHE_S3_USE_SSL
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
    script: build-tiledb-vcf.sh
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - git
        - cmake
        - make
        - sccache
        - automake
      host:
        - {{ pin_subpackage('tiledb', exact=True) }}
        - zlib
        - bzip2
          # - htslib >=1.15
      run:
        - {{ pin_subpackage('tiledb', exact=True) }}
          # - htslib >=1.15
    test:
      files:
        - test-tiledb-vcf-cli.sh
      commands:
        - tiledbvcf version
        # verify libhts is linked
        - ldd ${PREFIX}/lib/libtiledbvcf.so | grep libhts
        # verify libdeflate is linked to libhts
        - ldd ${PREFIX}/lib/libhts.so.* | grep libdeflate
        - tiledbvcf create --uri /tmp/test-tiledbvcf-conda
        - bash test-tiledb-vcf-cli.sh
  - name: tiledbvcf-py
    version: {{ version_tiledb_vcf }}
    script: build-tiledb-vcf-py.sh
    build:
      number: 0
      script_env:
        - SCCACHE_BUCKET
        - SCCACHE_REGION
          # - SCCACHE_ENDPOINT
          # - SCCACHE_S3_USE_SSL
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
    requirements:
      build:
        - {{ compiler('cxx') }}
        - sccache
      host:
        - {{ pin_subpackage('libtiledbvcf', exact=True) }}
      run:
        - {{ pin_subpackage('libtiledbvcf', exact=True) }}
    imports:
      - tiledbvcf
    test:
      # requires:
      #   - cudatoolkit=11.4  # [py==39]
      #   - cudatoolkit-dev=11.4  # [py==39]
      #   - jupyter  # [py==39]
      #   - pyarrow {{ pyarrow }}  # [py==39]
      #   - tensorflow=2.11.*  # [py==39]
      #   - tensorflow-datasets  # [py==39]
      files:
        - test-tiledb-vcf-api.py
      commands:
        - python -c "import tiledbvcf; tiledbvcf.version"
        - python test-tiledb-vcf-api.py
  - name: libtiledbsoma
    version: {{ version_tiledb_soma }}
    script: build-tiledb-soma.sh
    build:
      number: 0
      script_env:
        - SCCACHE_BUCKET
        - SCCACHE_REGION
          # - SCCACHE_ENDPOINT
          # - SCCACHE_S3_USE_SSL
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - git
        - cmake
        - make
        - sccache
      host:
        - {{ pin_subpackage('tiledb', exact=True) }}
      run:
        - {{ pin_subpackage('tiledb', exact=True) }}
    about:
      home: http://tiledb.com
      license: MIT
      license_family: MIT
      license_file: LICENSE
      summary: TileDB-SOMA C++ library
      description: >-
        SOMA - for "Stack Of Matrices, Annotated" - is a flexible, extensible,
        and open-source API enabling access to data in a variety of formats. The
        driving use case of SOMA is for single-cell data in the form of
        annotated matrices where observations are frequently cells and features
        are genes, proteins, or genomic regions.
      doc_url: https://docs.tiledb.com/
      dev_url: https://github.com/single-cell-data/TileDB-SOMA
  - name: tiledbsoma-py
    version: {{ version_tiledb_soma }}
    script: build-tiledb-soma-py.sh
    build:
      number: 0
      script_env:
        - SCCACHE_BUCKET
        - SCCACHE_REGION
          # - SCCACHE_ENDPOINT
          # - SCCACHE_S3_USE_SSL
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
    requirements:
      build:
        - {{ compiler('cxx') }}
        - sccache
      host:
        - {{ pin_subpackage('libtiledbsoma', exact=True) }}
      run:
        - {{ pin_subpackage('libtiledbsoma', exact=True) }}
        - {{ pin_subpackage('tiledb-py', exact=True) }}
    test:
      # requires:
      #   - cudatoolkit=11.4  # [py==39]
      #   - cudatoolkit-dev=11.4  # [py==39]
      #   - jupyter  # [py==39]
      #   - pyarrow {{ pyarrow }}  # [py==39]
      #   - tensorflow=2.11.*  # [py==39]
      #   - tensorflow-datasets  # [py==39]
      imports:
        - tiledbsoma
      commands:
        - python -c "import tiledbsoma; print(tiledbsoma.pytiledbsoma.version())"
    about:
      home: http://tiledb.com
      license: MIT
      license_family: MIT
      license_file: LICENSE
      summary: TileDB-SOMA Python API
      description: Python API for efficient storage and retrieval of single-cell data using TileDB
      doc_url: https://docs.tiledb.com/
      dev_url: https://github.com/single-cell-data/TileDB-SOMA/tree/main/apis/python
  - name: r-tiledbsoma
    version: {{ version_tiledb_soma }}
    script: build-tiledb-soma-r.sh
    build:
      number: 0
      script_env:
        - SCCACHE_BUCKET
        - SCCACHE_REGION
          # - SCCACHE_ENDPOINT
          # - SCCACHE_S3_USE_SSL
        - AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY
      rpaths:
        - lib/R/lib/
        - lib/
    requirements:
      build:
        - {{ compiler('cxx') }}
        - pkg-config
        - sccache
      host:
        - {{ pin_subpackage('libtiledbsoma', exact=True) }}
        - {{ pin_subpackage('r-tiledb', exact=True) }}
      run:
        - {{ pin_subpackage('libtiledbsoma', exact=True) }}
        - {{ pin_subpackage('r-tiledb', exact=True) }}
    test:
      commands:
        - $R -e "library('tiledbsoma')"
        - $R -e "tiledbsoma::show_package_versions()"
        - "ldd $PREFIX/lib/R/library/tiledbsoma/libs/tiledbsoma.so | grep -e libR -e libtiledb"
    about:
      home: http://tiledb.com
      license: MIT
      license_family: MIT
      license_file:
        - '{{ environ["PREFIX"] }}/lib/R/share/licenses/MIT'
        - TileDB-SOMA/apis/r/LICENSE
      summary: TileDB-SOMA R API
      description: R API for efficient storage and retrieval of single-cell data using TileDB
      doc_url: https://docs.tiledb.com/
      dev_url: https://github.com/single-cell-data/TileDB-SOMA/tree/main/apis/r

about:
  home: http://tiledb.io
  license: MIT
  license_family: MIT
  summary: TileDB stack to deploy to TileDB Cloud
  description: |
    Special set of linux binaries for easy deployment
  doc_url: http://docs.tiledb.io
  dev_url: https://github.com/TileDB-Inc/TileDB

extra:
  recipe-maintainers:
    - ihnorton
    - jdblischak
    - shelnutt2
